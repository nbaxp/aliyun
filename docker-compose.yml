version: "3.9"

services:
    portainer:
        image: portainer/portainer-ce:2.14.0
        restart: always
        container_name: portainer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/portainer:/data
    nginx:
        image: nginx:1.23.0
        restart: always
        container_name: nginx
        environment:
            TZ: "Asia/Shanghai"
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./conf/nginx/conf.d:/etc/nginx/conf.d
            - ./conf/nginx/cert:/etc/nginx/cert
            - ./conf/nginx/htpass:/etc/nginx/htpass
            - ./log/nginx:/var/log/nginx
            - ./apps/nginx:/usr/share/nginx/html
        depends_on:
            - whitebophir
            - netdata
            - portainer
            - gitea
            - drone
            - drone-runner-docker
            - nexus3
    whitebophir:
        image: lovasoa/wbo:1.5.0
        restart: always
        container_name: whitebophir
        volumes:
            - ./data/whitebophir:/opt/app/server-data
            - ./apps/whitebophir/client-data/index.html:/opt/app/client-data/index.html
            - ./apps/whitebophir/client-data/board.html:/opt/app/client-data/board.html
            - ./apps/whitebophir/client-data/tools/line/line.css:/opt/app/client-data/tools/line/line.css
            - ./apps/whitebophir/client-data/tools/rect/rect.css:/opt/app/client-data/tools/rect/rect.css
    netdata:
        image: netdata/netdata
        container_name: netdata
        hostname: netdata.nbaxp.com
        ports:
            - 19999:19999
        restart: unless-stopped
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - /etc/passwd:/host/etc/passwd:ro
            - /etc/group:/host/etc/group:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /etc/os-release:/host/etc/os-release:ro
            - ./data/netdata/config:/etc/netdata
            - ./data/netdata/lib:/var/lib/netdata
            - ./data/netdata/cache:/var/cache/netdata
    # https://hub.docker.com/r/gitea/gitea
    # https://docs.gitea.io/en-us/install-with-docker/
    gitea:
        # init with ip:port https://docs.gitea.io/en-us/install-with-docker
        image: gitea/gitea:1.16.8
        container_name: gitea
        restart: always
        environment:
            - GITEA__server__DOMAIN=${GITEA_SERVER_DOMAIN}
            - GITEA__server__SSH_DOMAIN=${GITEA_SERVER_DOMAIN}
            - GITEA__server__ROOT_URL=https://${GITEA_SERVER_DOMAIN}/
            - GITEA__mailer__ENABLED=true
            - GITEA__mailer__FROM=admin@nbaxp.com
            - GITEA__mailer__HOST=smtp.ym.163.com:994
            - GITEA__mailer__IS_TLS_ENABLED=true
            - GITEA__mailer__USER=admin@nbaxp.com
            - GITEA__mailer__PASSWD="""aA123456!"""
        ports:
            - 3000:3000
            - 222:22
        volumes:
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./data/gitea:/data
    #https://docs.drone.io/server/provider/gitea/ https://github.com/drone/drone
    drone:
        image: drone/drone:2.12.1
        restart: always
        container_name: drone
        environment:
            - DRONE_GITEA_SERVER=https://${GITEA_SERVER_DOMAIN}
            - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
            - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
            - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
            - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
            - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
            - DRONE_GIT_ALWAYS_AUTH=true
            - DRONE_USER_CREATE=username:wanggang,admin:true
        volumes:
            - ./data/drone:/data
        depends_on:
            - gitea
            # - nexus3
    drone-runner-docker:
        image: drone/drone-runner-docker:1.8.2
        restart: always
        container_name: drone-runner-docker
        privileged: true
        environment:
            - DRONE_RPC_PROTO=${DRONE_SERVER_PROTO}
            - DRONE_RPC_HOST=${DRONE_SERVER_HOST}
            - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
            - DRONE_RUNNER_CAPACITY=2
            - DRONE_RUNNER_NAME=drone-runner-docker
            - DRONE_DEBUG=true
            - DRONE_TRACE=true
        volumes:
            - ${DOCKER_SOCK}:/var/run/docker.sock
        depends_on:
            - drone
    nexus3:
        image: sonatype/nexus3:3.40.1
        restart: always
        container_name: nexus3
        privileged: true
        ports:
            - 8082:8082
        volumes:
            - ./data/nexus3:/nexus-data
